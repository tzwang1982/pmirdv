%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.5
%%CreationDate: Mon Jan 22 15:51:26 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CAUGCUCUUCCAACGGUUCAUUGAGAGAUUAUUACAUGCACUGUCUGGACCGUCUGGAAGCGAAUCCGGACGUGUCACGUCACCCGGAUGCACUGGGCCCAGGGUGAUGUGGCGCGUCCGGAUUCGCCUCCAGACGAAUCCGGACGCCGCACG\
) def
/coor [
[-11.96856499 309.16406250]
[-24.35933304 320.03472900]
[-39.69109344 326.01779175]
[-56.11862946 326.41195679]
[-71.67122650 321.18731689]
[-80.78240967 333.10311890]
[-89.89358521 345.01895142]
[-99.00476074 356.93475342]
[-108.11594391 368.85055542]
[-100.78956604 382.20135498]
[-99.53331757 397.37838745]
[-104.56485748 411.75207520]
[-115.01243591 422.83215332]
[-129.06594849 428.69891357]
[-144.29054260 428.33587646]
[-158.04844666 421.80596924]
[-167.95605469 410.24050903]
[-172.29678345 395.64334106]
[-170.31858826 380.54342651]
[-162.36419678 367.55700684]
[-149.81176758 358.93399048]
[-134.83607483 356.16839600]
[-120.03174591 359.73937988]
[-110.92057037 347.82357788]
[-101.80939484 335.90774536]
[-92.69821167 323.99194336]
[-83.58703613 312.07614136]
[-91.44731140 301.06369019]
[-95.87908173 288.26235962]
[-96.51174164 274.71350098]
[-93.28414917 261.52212524]
[-86.45038605 249.76679993]
[-76.55977631 240.41143799]
[-64.41275024 234.22628784]
[-50.99606323 231.72447205]
[-37.40264511 233.11952209]
[-24.74256325 238.30708313]
[-15.15293980 226.77281189]
[-5.56331539 215.23855591]
[-7.18019867 200.47640991]
[2.38073444 188.64241028]
[17.87560654 187.04656982]
[27.46523094 175.51231384]
[37.05485535 163.97805786]
[46.64447784 152.44380188]
[56.23410416 140.90954590]
[65.82373047 129.37528992]
[75.41335297 117.84102631]
[85.00297546 106.30677032]
[87.38436890 89.72712708]
[103.13777924 84.03627777]
[112.49012756 72.30880737]
[121.84247589 60.58133316]
[131.19482422 48.85386276]
[140.54716492 37.12638855]
[149.89952087 25.39891815]
[159.25186157 13.67144585]
[168.60421753 1.94397378]
[171.15921021 -13.66956329]
[185.14379883 -18.79601669]
[194.49615479 -30.52348900]
[203.84849548 -42.25096130]
[213.20083618 -53.97843552]
[222.55319214 -65.70590973]
[231.90553284 -77.43338013]
[241.25788879 -89.16085052]
[250.61022949 -100.88832092]
[259.96258545 -112.61579895]
[269.31491089 -124.34326935]
[278.66726685 -136.07073975]
[288.01962280 -147.79821777]
[297.37197876 -159.52568054]
[306.72430420 -171.25315857]
[316.07666016 -182.98062134]
[325.42901611 -194.70809937]
[334.78134155 -206.43557739]
[344.13369751 -218.16304016]
[353.48605347 -229.89051819]
[362.83840942 -241.61799622]
[372.19073486 -253.34545898]
[381.54309082 -265.07293701]
[390.89544678 -276.80041504]
[400.24777222 -288.52789307]
[409.60012817 -300.25534058]
[418.95248413 -311.98281860]
[428.18472290 -323.80508423]
[437.29589844 -335.72088623]
[438.54275513 -342.31301880]
[442.38360596 -346.60421753]
[447.02978516 -347.92678833]
[456.61941528 -359.46105957]
[456.58648682 -375.50408936]
[469.19842529 -385.41961670]
[484.78048706 -381.60134888]
[491.37939453 -366.97827148]
[483.93307495 -352.76800537]
[468.15368652 -349.87142944]
[458.56405640 -338.33718872]
[449.21170044 -326.60971069]
[440.10052490 -314.69390869]
[438.52651978 -307.42626953]
[430.67996216 -302.63046265]
[421.32760620 -290.90301514]
[411.97525024 -279.17553711]
[402.62289429 -267.44805908]
[393.27056885 -255.72058105]
[383.91821289 -243.99311829]
[374.56585693 -232.26564026]
[365.21353149 -220.53817749]
[355.86117554 -208.81069946]
[346.50881958 -197.08322144]
[337.15649414 -185.35575867]
[327.80413818 -173.62828064]
[318.45178223 -161.90080261]
[309.09942627 -150.17333984]
[299.74710083 -138.44586182]
[290.39474487 -126.71839142]
[281.04238892 -114.99092102]
[271.69006348 -103.26345062]
[262.33770752 -91.53597260]
[252.98535156 -79.80850220]
[243.63301086 -68.08103180]
[234.28067017 -56.35355759]
[224.92831421 -44.62608719]
[215.57597351 -32.89861298]
[206.22361755 -21.17114258]
[196.87127686 -9.44367027]
[194.98521423 5.33103943]
[180.33168030 11.29632092]
[170.97933960 23.02379227]
[161.62698364 34.75126648]
[152.27464294 46.47873688]
[142.92230225 58.20621109]
[133.56994629 69.93368530]
[124.21759796 81.66115570]
[114.86525726 93.38862610]
[115.46309662 105.05754852]
[108.08530426 114.11785889]
[96.53723145 115.89639282]
[86.94760895 127.43064880]
[77.35798645 138.96490479]
[67.76836395 150.49916077]
[58.17873764 162.03341675]
[48.58911133 173.56768799]
[38.99948883 185.10194397]
[29.40986443 196.63619995]
[30.66973686 212.16200256]
[20.78018379 223.72276306]
[5.97094250 224.82818604]
[-3.61868191 236.36244202]
[-13.20830631 247.89669800]
[-4.65757275 262.10824585]
[-1.47195506 278.35900879]
] def
/pairs [
[5 27]
[6 26]
[7 25]
[8 24]
[9 23]
[37 151]
[38 150]
[39 149]
[42 146]
[43 145]
[44 144]
[45 143]
[46 142]
[47 141]
[48 140]
[49 139]
[51 136]
[52 135]
[53 134]
[54 133]
[55 132]
[56 131]
[57 130]
[58 129]
[60 127]
[61 126]
[62 125]
[63 124]
[64 123]
[65 122]
[66 121]
[67 120]
[68 119]
[69 118]
[70 117]
[71 116]
[72 115]
[73 114]
[74 113]
[75 112]
[76 111]
[77 110]
[78 109]
[79 108]
[80 107]
[81 106]
[82 105]
[83 104]
[84 103]
[85 102]
[86 100]
[87 99]
[90 98]
[91 97]
] def

init

% Start Annotations
58 81 5 GREEN omark 108 131 5 RED omark 108 cmark 82 cmark 132 cmark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.5
%%CreationDate: Mon Jan 22 15:52:27 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UUUAAUUUGUUGUUCUAUUUUCUACUAAAUGAUUGUCCGUCUUCCAACAUUUUAAUUUUAUCUGUAAUAGAAAUUGUUAUGAUUUUAAGCCGGCCUACACGUGCACGGCCUACUCAAAAACAACUUGAGCAUCUUCUUUAGAAUAACUGUAGAUCCUACAUGUACGAUUCUGCAACCGAAAGAAGGGCGGGGGAUUCAUUGAAGAAUAGAGGUUGUUGCUCGAGAUGAUGCUCAAGUGGUUUUUGAGUUGCUGAU\
GCAUUCAUUGGAUUUACGA\
) def
/coor [
[122.81219482 297.36206055]
[114.14868164 310.38040161]
[99.12953186 314.73461914]
[84.84632874 308.36877441]
[78.04316711 294.28860474]
[81.93228912 279.14236450]
[94.67736816 270.08163452]
[95.70472717 255.11685181]
[96.73207855 240.15206909]
[97.75942993 225.18728638]
[86.23788452 215.78559875]
[82.41650391 201.23014832]
[87.96350098 187.04972839]
[100.94680786 178.75878906]
[101.97416687 163.79400635]
[103.00151825 148.82923889]
[104.02886963 133.86445618]
[96.95075226 131.38447571]
[85.57739258 141.16438293]
[82.79452515 126.42451477]
[75.71641541 123.94453430]
[67.17917633 136.27804565]
[72.43701935 150.87718201]
[68.07721710 165.76918030]
[55.77621460 175.22778320]
[40.26399612 175.61593628]
[27.50532341 166.78440857]
[22.40616798 152.12908936]
[26.92725945 137.28526306]
[39.33014679 127.96067047]
[54.84566116 127.74080658]
[63.38290024 115.40729523]
[69.02833557 111.92348480]
[74.84777069 108.80408478]
[59.86758804 109.57485962]
[44.88740540 110.34564209]
[29.92262840 111.37299347]
[14.97765255 112.65661621]
[0.03267633 113.94024658]
[-13.05475330 122.83010864]
[-26.39745903 116.21032715]
[-41.34243393 117.49395752]
[-56.28741074 118.77758026]
[-66.44739532 130.58488464]
[-81.62200928 131.67376709]
[-92.81585693 121.91500854]
[-107.76083374 123.19863892]
[-122.69823456 124.56760406]
[-137.62757874 126.02187347]
[-152.55691528 127.47614288]
[-162.58134460 139.39874268]
[-177.74253845 140.66090393]
[-189.04713440 131.03065491]
[-203.97647095 132.48492432]
[-218.90580750 133.93919373]
[-233.83514404 135.39346313]
[-248.76448059 136.84773254]
[-263.69381714 138.30200195]
[-278.62316895 139.75627136]
[-284.90371704 153.77233887]
[-297.36029053 162.75730896]
[-312.64208984 164.29428101]
[-326.63839722 157.96981812]
[-335.58425903 145.48515320]
[-337.07333374 130.19862366]
[-330.70501709 116.22220612]
[-318.19238281 107.31549835]
[-302.90124512 105.87435150]
[-288.94485474 112.28643799]
[-280.07742310 124.82693481]
[-265.14810181 123.37266541]
[-250.21875000 121.91839600]
[-235.28941345 120.46413422]
[-220.36007690 119.00986481]
[-205.43074036 117.55559540]
[-190.50140381 116.10132599]
[-181.26785278 104.47045898]
[-166.14810181 102.78294373]
[-154.01118469 112.54680634]
[-139.08184814 111.09253693]
[-124.15250397 109.63826752]
[-117.82401276 105.87638092]
[-109.04446411 108.25366211]
[-94.09948730 106.97003937]
[-84.73366547 95.44541168]
[-69.59561920 93.93073273]
[-57.57103348 103.83260345]
[-42.62606049 102.54898071]
[-27.68108368 101.26535797]
[-15.66261768 92.46730042]
[-1.25094879 98.99526978]
[13.69402695 97.71164703]
[28.63900375 96.42801666]
[31.16255188 94.01665497]
[34.96533966 92.68910980]
[39.53385162 93.02722931]
[44.11662674 95.36545563]
[59.09680939 94.59468079]
[74.07699585 93.82389832]
[91.47615051 74.75142670]
[116.87514496 79.37535858]
[129.25723267 70.90870667]
[141.63929749 62.44206238]
[154.02137756 53.97541428]
[166.40345764 45.50876617]
[178.73696899 36.97152710]
[191.02153015 28.36398315]
[203.30607605 19.75643730]
[215.59062195 11.14889336]
[218.58016968 -1.37257266]
[228.95756531 -8.29267406]
[240.87567139 -6.36610651]
[253.25775146 -14.83275414]
[265.63983154 -23.29940224]
[278.02191162 -31.76605034]
[290.40399170 -40.23270035]
[302.78607178 -48.69934845]
[315.16815186 -57.16599655]
[327.55023193 -65.63264465]
[339.93231201 -74.09928894]
[352.31436157 -82.56594086]
[359.33877563 -96.74227905]
[374.21203613 -97.53917694]
[386.59411621 -106.00582886]
[398.97619629 -114.47247314]
[411.35827637 -122.93912506]
[423.74035645 -131.40577698]
[436.12243652 -139.87242126]
[448.50451660 -148.33906555]
[460.88659668 -156.80570984]
[473.26867676 -165.27236938]
[485.65075684 -173.73901367]
[498.03280640 -182.20565796]
[505.05722046 -196.38200378]
[519.93048096 -197.17889404]
[532.31256104 -205.64553833]
[544.69464111 -214.11219788]
[557.07672119 -222.57884216]
[564.10107422 -236.75517273]
[578.97436523 -237.55207825]
[591.35644531 -246.01872253]
[603.68994141 -254.55595398]
[615.97454834 -263.16351318]
[628.25909424 -271.77105713]
[640.54364014 -280.37860107]
[652.82818604 -288.98614502]
[665.11273193 -297.59368896]
[677.39727783 -306.20123291]
[676.60479736 -319.94067383]
[682.64794922 -332.18472290]
[693.85675049 -339.79113770]
[707.25152588 -340.86679077]
[719.33453369 -335.23779297]
[731.71661377 -343.70443726]
[738.74096680 -357.88076782]
[753.61425781 -358.67767334]
[765.99633789 -367.14431763]
[773.02069092 -381.32064819]
[787.89398193 -382.11755371]
[800.27606201 -390.58419800]
[799.56994629 -401.16345215]
[803.27136230 -411.01315308]
[810.65612793 -418.39523315]
[820.35632324 -422.03646851]
[830.61389160 -421.34802246]
[839.59863281 -416.51937866]
[852.26354980 -424.55679321]
[859.76953125 -438.48410034]
[874.66137695 -438.77090454]
[887.32629395 -446.80831909]
[899.99121094 -454.84570312]
[907.49725342 -468.77304077]
[922.38909912 -469.05981445]
[925.95153809 -484.22381592]
[938.91003418 -492.19448853]
[953.34466553 -488.70480347]
[966.00958252 -496.74221802]
[966.84942627 -512.23651123]
[976.66235352 -524.25677490]
[991.67504883 -528.18090820]
[1006.11486816 -522.50000000]
[1014.42932129 -509.39849854]
[1013.42138672 -493.91418457]
[1003.47863770 -482.00109863]
[988.42425537 -478.24008179]
[974.04693604 -484.07730103]
[961.38201904 -476.03988647]
[958.39361572 -461.49322510]
[945.66412354 -453.16174316]
[930.42651367 -456.39489746]
[923.82635498 -443.04248047]
[908.02862549 -442.18078613]
[895.36370850 -434.14337158]
[882.69879150 -426.10598755]
[876.09863281 -412.75354004]
[860.30096436 -411.89187622]
[847.63604736 -403.85446167]
[844.74652100 -384.55709839]
[828.30841064 -373.48458862]
[808.74273682 -378.20211792]
[796.36065674 -369.73547363]
[790.22186279 -356.16473389]
[774.46295166 -354.76223755]
[762.08087158 -346.29559326]
[755.94213867 -332.72485352]
[740.18322754 -331.32235718]
[727.80114746 -322.85571289]
[727.85009766 -306.42272949]
[717.98455811 -293.07302856]
[701.94268799 -288.19912720]
[686.00482178 -293.91668701]
[673.72027588 -285.30914307]
[661.43572998 -276.70159912]
[649.15118408 -268.09405518]
[636.86663818 -259.48651123]
[624.58209229 -250.87895203]
[612.29748535 -242.27140808]
[608.63684082 -235.88383484]
[599.82312012 -233.63664246]
[587.44104004 -225.16999817]
[581.30230713 -211.59925842]
[565.54333496 -210.19676208]
[553.16131592 -201.73011780]
[540.77923584 -193.26345825]
[528.39715576 -184.79681396]
[522.25836182 -171.22607422]
[506.49948120 -169.82357788]
[494.11740112 -161.35693359]
[481.73532104 -152.89028931]
[469.35324097 -144.42362976]
[456.97116089 -135.95698547]
[444.58908081 -127.49034119]
[432.20700073 -119.02368927]
[419.82492065 -110.55704498]
[407.44284058 -102.09039307]
[395.06076050 -93.62374878]
[382.67868042 -85.15709686]
[376.53994751 -71.58634949]
[360.78103638 -70.18386078]
[348.39895630 -61.71721268]
[336.01687622 -53.25056458]
[323.63479614 -44.78391647]
[311.25271606 -36.31726837]
[298.87063599 -27.85062027]
[286.48855591 -19.38397217]
[274.10647583 -10.91732407]
[261.72439575 -2.45067620]
[249.34231567 6.01597214]
[242.59054565 22.23151398]
[224.19816589 23.43344307]
[211.91362000 32.04098892]
[199.62907410 40.64853287]
[187.34452820 49.25607681]
[183.68385315 55.64365768]
[174.87010193 57.89084244]
[162.48803711 66.35749054]
[150.10595703 74.82414246]
[137.72387695 83.29078674]
[125.34179688 91.75743866]
[129.24401855 98.91420746]
[130.96420288 107.58533478]
[129.97691345 117.06790924]
[125.98972321 126.49066925]
[118.99364471 134.89179993]
[117.96629333 149.85658264]
[116.93894196 164.82136536]
[115.91159058 179.78613281]
[127.64006042 189.77357483]
[131.19714355 204.57901001]
[125.42248535 218.47567749]
[112.72420502 226.21464539]
[111.69685364 241.17942810]
[110.66950226 256.14419556]
[109.64215088 271.10897827]
] def
/pairs [
[7 274]
[8 273]
[9 272]
[10 271]
[14 267]
[15 266]
[16 265]
[17 264]
[21 32]
[22 31]
[34 99]
[35 98]
[36 97]
[37 93]
[38 92]
[39 91]
[41 89]
[42 88]
[43 87]
[46 84]
[47 83]
[48 81]
[49 80]
[50 79]
[53 76]
[54 75]
[55 74]
[56 73]
[57 72]
[58 71]
[59 70]
[101 259]
[102 258]
[103 257]
[104 256]
[105 255]
[106 253]
[107 252]
[108 251]
[109 250]
[112 248]
[113 247]
[114 246]
[115 245]
[116 244]
[117 243]
[118 242]
[119 241]
[120 240]
[121 239]
[123 237]
[124 236]
[125 235]
[126 234]
[127 233]
[128 232]
[129 231]
[130 230]
[131 229]
[132 228]
[133 227]
[135 225]
[136 224]
[137 223]
[138 222]
[140 220]
[141 219]
[142 217]
[143 216]
[144 215]
[145 214]
[146 213]
[147 212]
[148 211]
[153 207]
[154 206]
[156 204]
[157 203]
[159 201]
[160 200]
[166 197]
[167 196]
[169 194]
[170 193]
[171 192]
[173 190]
[176 187]
[177 186]
] def

init

% Start Annotations
114 133 5 GREEN omark 229 248 5 RED omark 229 cmark 134 cmark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

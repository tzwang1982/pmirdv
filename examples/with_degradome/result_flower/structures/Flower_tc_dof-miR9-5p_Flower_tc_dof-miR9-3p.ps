%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.5
%%CreationDate: Mon Jan 22 15:50:05 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
UAUUUUGCUUGGGCUUUUUGCAUUGACAACGAGAGAGAGCACGCUGGCUGGUCGGCGGCCAUGAACGCGGUCGUGACCGUUUAUUUGCUCGCUCCCUCUUGCUGUCAUCCACUUCGCCCUGUAAAAUGGCUGCCAGGAAAUUUCGGAGCCGUGGCUCUCUUACCAGGAGAUUUCUACUGUAUGAAAGGGUGAUUGAAGACAGAUUCUUGUAGCAGUCGAGUCCAAGCAAUUGAAGUUUCCAUAUUCAAAU\
) def
/coor [
[111.52336884 383.93838501]
[112.85646057 368.99774170]
[123.40650940 358.33489990]
[138.33212280 356.84298706]
[150.78323364 365.20559692]
[147.61560059 350.54385376]
[144.44798279 335.88214111]
[141.28034973 321.22042847]
[138.11271667 306.55868530]
[134.94508362 291.89697266]
[131.77746582 277.23526001]
[128.60983276 262.57351685]
[125.44219971 247.91180420]
[122.27457428 233.25007629]
[119.10694122 218.58834839]
[115.93931580 203.92663574]
[103.47057343 191.56202698]
[109.28273773 174.07658386]
[105.93185425 159.45565796]
[102.58096313 144.83473206]
[99.23007965 130.21380615]
[86.04497528 126.80902863]
[75.69283295 117.96186066]
[70.27519226 105.46832275]
[55.31071854 104.43653870]
[40.34624863 103.40476227]
[25.38177490 102.37297821]
[10.41730309 101.34120178]
[-3.88239551 108.11092377]
[-16.04730988 99.51650238]
[-31.01178169 98.48472595]
[-45.97625351 97.45294189]
[-60.94072723 96.42116547]
[-75.90519714 95.38938141]
[-90.86967468 94.35760498]
[-105.16937256 101.12732697]
[-117.33428192 92.53290558]
[-132.29875183 91.50112915]
[-147.26322937 90.46934509]
[-162.22770691 89.43756866]
[-174.08384705 99.54051971]
[-189.24525452 98.28097534]
[-198.80380249 86.91569519]
[-213.76828003 85.88391113]
[-228.74948120 85.13324738]
[-243.74214172 84.66396332]
[-258.73480225 84.19467926]
[-272.77029419 91.49644470]
[-285.24926758 83.36475372]
[-300.24191284 82.89546967]
[-315.23455811 82.42617798]
[-330.22723389 81.95689392]
[-345.21987915 81.48760986]
[-360.21255493 81.01832581]
[-368.86184692 83.87200165]
[-375.38958740 80.44818115]
[-390.37518311 79.79128265]
[-405.36080933 79.13438416]
[-420.34640503 78.47749329]
[-435.33203125 77.82059479]
[-444.88800049 90.04609680]
[-459.81414795 94.28749847]
[-474.37106323 88.91389465]
[-482.96133423 75.99154663]
[-482.28179932 60.48935318]
[-472.59375000 48.36823654]
[-457.62246704 44.28900528]
[-443.12469482 49.82020569]
[-434.67510986 62.83498383]
[-419.68951416 63.49188232]
[-404.70388794 64.14877319]
[-389.71829224 64.80567169]
[-374.73269653 65.46257019]
[-359.74325562 66.02567291]
[-344.75061035 66.49495697]
[-329.75793457 66.96424103]
[-314.76528931 67.43352509]
[-299.77261353 67.90280914]
[-284.77996826 68.37209320]
[-271.81686401 61.03676224]
[-258.26550293 69.20201874]
[-243.27285767 69.67131042]
[-228.28019714 70.14059448]
[-225.48654175 68.02951050]
[-221.53971863 67.15278625]
[-217.02459717 68.03420258]
[-212.73649597 70.91944122]
[-197.77201843 71.95122528]
[-186.74409485 62.00535202]
[-171.55329895 62.83855057]
[-161.19592285 74.47309113]
[-146.23144531 75.50487518]
[-131.26698303 76.53665161]
[-116.30250549 77.56843567]
[-103.07316589 70.72490692]
[-89.83789062 79.39313507]
[-74.87342072 80.42491150]
[-59.90894699 81.45668793]
[-44.94447327 82.48847198]
[-29.98000336 83.52024841]
[-15.01553059 84.55203247]
[-1.78619039 77.70850372]
[11.44908333 86.37673187]
[26.41355515 87.40850830]
[41.37802887 88.44029236]
[56.34249878 89.47206879]
[71.30696869 90.50385284]
[81.96577454 73.35185242]
[102.09018707 65.93374634]
[123.72547150 72.81299591]
[133.10923767 61.11065292]
[132.47518921 48.24505234]
[140.51034546 38.69490814]
[152.50004578 37.21817398]
[162.02954102 25.63418961]
[171.55903625 14.05020714]
[181.08853149 2.46622396]
[190.61802673 -9.11775875]
[200.14753723 -20.70174217]
[209.67703247 -32.28572464]
[200.54754639 -45.49269104]
[195.96382141 -61.04406357]
[196.48056030 -77.40628815]
[202.14431763 -92.93352509]
[212.47903442 -106.03314972]
[226.52452087 -115.32904816]
[242.92512512 -119.80588531]
[260.06042480 -118.91921234]
[265.03359985 -133.07081604]
[270.00677490 -147.22239685]
[274.97991943 -161.37399292]
[274.87030029 -170.48124695]
[280.10491943 -175.67092896]
[285.25482178 -189.75915527]
[285.25918579 -198.86708069]
[290.55834961 -203.99082947]
[295.88415527 -218.01350403]
[301.20999146 -232.03619385]
[301.18136597 -248.99011230]
[317.46478271 -253.71093750]
[326.50881958 -239.37072754]
[315.23266602 -226.71035767]
[309.90686035 -212.68768311]
[304.58102417 -198.66499329]
[299.34304810 -184.60926819]
[294.19314575 -170.52102661]
[289.13153076 -156.40083313]
[284.15835571 -142.24923706]
[279.18518066 -128.09764099]
[274.21203613 -113.94604492]
[286.14556885 -104.85813141]
[298.46566772 -113.41471863]
[310.78576660 -121.97131348]
[323.10586548 -130.52790833]
[330.89367676 -149.13946533]
[350.23168945 -149.84933472]
[362.33374023 -158.71160889]
[374.43582153 -167.57389832]
[386.53787231 -176.43617249]
[398.63995361 -185.29846191]
[410.74200439 -194.16073608]
[419.94879150 -208.39701843]
[436.17739868 -203.49102783]
[435.95565796 -186.53852844]
[419.60427856 -182.05868530]
[407.50222778 -173.19639587]
[395.40014648 -164.33410645]
[383.29809570 -155.47183228]
[371.19604492 -146.60954285]
[359.09396362 -137.74726868]
[358.45440674 -127.58076477]
[352.20407104 -119.26122284]
[342.20510864 -115.66775513]
[331.66244507 -118.20780945]
[319.34234619 -109.65122223]
[307.02227783 -101.09462738]
[294.70217896 -92.53803253]
[299.87188721 -77.69184113]
[300.55657959 -62.11460495]
[296.77215576 -47.12081528]
[288.90850830 -33.95463943]
[277.69079590 -23.68670082]
[264.11306763 -17.12712288]
[249.35038757 -14.76187706]
[234.65725708 -16.71743774]
[221.26101685 -22.75622559]
[211.73152161 -11.17224312]
[202.20201111 0.41173959]
[192.67251587 11.99572277]
[183.14302063 23.57970619]
[173.61352539 35.16368866]
[164.08403015 46.74766922]
[162.12869263 64.19844818]
[144.81158447 70.49442291]
[135.42781067 82.19676208]
[139.50619507 96.63168335]
[153.62638855 101.69331360]
[167.74658203 106.75494385]
[181.86677551 111.81658173]
[196.92916870 106.29355621]
[210.56311035 114.74904633]
[212.30979919 130.69673157]
[200.82933044 141.90290833]
[184.92854309 139.77114868]
[176.80514526 125.93677521]
[162.68495178 120.87514496]
[148.56475830 115.81350708]
[134.44456482 110.75187683]
[130.37063599 116.61552429]
[125.38613129 121.32389069]
[119.77999878 124.75723267]
[113.85100555 126.86291504]
[117.20189667 141.48384094]
[120.55278015 156.10476685]
[123.90367126 170.72570801]
[134.38456726 178.21411133]
[136.88508606 190.44180298]
[130.60104370 200.75900269]
[133.76866150 215.42073059]
[136.93629456 230.08244324]
[140.10392761 244.74417114]
[143.27156067 259.40588379]
[146.43917847 274.06762695]
[149.60681152 288.72933960]
[152.77444458 303.39105225]
[155.94207764 318.05279541]
[159.10969543 332.71450806]
[162.27732849 347.37622070]
[165.44496155 362.03796387]
[169.25163269 376.54690552]
[173.69003296 390.87521362]
[178.12844849 405.20352173]
[182.56686401 419.53182983]
[187.00526428 433.86013794]
[201.89756775 437.88793945]
[212.23121643 449.34301758]
[214.70878601 464.57015991]
[208.53970337 478.71035767]
[195.69248962 487.25161743]
[180.26666260 487.46838379]
[167.18450928 479.29150391]
[160.62054443 465.33020020]
[162.66926575 450.03948975]
[172.67695618 438.29855347]
[168.23855591 423.97024536]
[163.80014038 409.64193726]
[159.36172485 395.31362915]
[154.92332458 380.98529053]
[148.18058777 394.38439941]
[134.44470215 400.41143799]
] def
/pairs [
[5 229]
[6 228]
[7 227]
[8 226]
[9 225]
[10 224]
[11 223]
[12 222]
[13 221]
[14 220]
[15 219]
[16 218]
[18 215]
[19 214]
[20 213]
[21 212]
[24 107]
[25 106]
[26 105]
[27 104]
[28 103]
[30 101]
[31 100]
[32 99]
[33 98]
[34 97]
[35 96]
[37 94]
[38 93]
[39 92]
[40 91]
[43 88]
[44 87]
[45 83]
[46 82]
[47 81]
[49 79]
[50 78]
[51 77]
[52 76]
[53 75]
[54 74]
[56 73]
[57 72]
[58 71]
[59 70]
[60 69]
[110 195]
[111 194]
[114 192]
[115 191]
[116 190]
[117 189]
[118 188]
[119 187]
[120 186]
[128 150]
[129 149]
[130 148]
[131 147]
[133 146]
[134 145]
[136 144]
[137 143]
[138 142]
[151 177]
[152 176]
[153 175]
[154 174]
[156 170]
[157 169]
[158 168]
[159 167]
[160 166]
[161 165]
[196 208]
[197 207]
[198 206]
[199 205]
[230 248]
[231 247]
[232 246]
[233 245]
[234 244]
] def

init

% Start Annotations
24 44 5 GREEN omark 89 109 5 RED omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

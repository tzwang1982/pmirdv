%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.5
%%CreationDate: Mon Jan 22 15:50:03 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CUUUUCUGACCAAAAGACAUGCUAAAAGUGUUGUUGCCUGGUCAUCACAGGCUGCGACUAUUCAUGUUUGAACUUGUAAGGCUUCGAUUGGGACGGCUUUCUUACUGCUUCAUAAAGCAGCUUUAAUUUUCGUACUGAAAAGCUGCUUUAUGAAGCAGUAUGAAAGCCAUCCCAAACGAAGCUAUAGAAAUGGCUCAGCUGCAGAAGCAGA\
) def
/coor [
[73.93648529 245.00717163]
[66.54467010 231.95494080]
[69.14906311 217.18276978]
[80.55880737 207.44531250]
[95.55671692 207.19509888]
[107.28430176 216.54551697]
[105.51020813 201.65080261]
[103.73610687 186.75608826]
[101.96201324 171.86137390]
[100.07759857 156.98020935]
[98.08298492 142.11341858]
[96.08837128 127.24662018]
[88.82627106 125.15605164]
[82.40636444 121.16939545]
[77.31255341 115.58713531]
[63.10265350 120.39118195]
[48.89276123 125.19523621]
[34.68286514 129.99928284]
[20.47296906 134.80332947]
[6.26307344 139.60737610]
[-7.94682169 144.41142273]
[-10.69488621 147.77104187]
[-14.03318787 149.87072754]
[-17.49331474 150.67961121]
[-20.64492607 150.32208252]
[-23.14307594 149.05191040]
[-37.61260986 153.00572205]
[-45.48035431 166.44953918]
[-60.21084213 170.25314331]
[-72.97898865 162.66960144]
[-87.44851685 166.62341309]
[-101.91805267 170.57722473]
[-116.38758850 174.53102112]
[-130.85711670 178.48483276]
[-142.12980652 189.58605957]
[-156.44644165 185.47712708]
[-170.91596985 189.43093872]
[-185.38549805 193.38473511]
[-199.85504150 197.33854675]
[-214.32456970 201.29235840]
[-220.69842529 215.57199097]
[-234.78239441 222.36727905]
[-249.92645264 218.46968079]
[-258.98007202 205.71952820]
[-257.66836548 190.13705444]
[-246.61070251 179.07983398]
[-231.02818298 177.76873779]
[-218.27838135 186.82281494]
[-203.80885315 182.86901855]
[-189.33930969 178.91520691]
[-174.86978149 174.96139526]
[-160.40023804 171.00759888]
[-150.16252136 160.18917847]
[-134.81092834 164.01530457]
[-120.34139252 160.06149292]
[-105.87186432 156.10768127]
[-91.40232849 152.15386963]
[-76.93279266 148.20007324]
[-69.79533386 135.17730713]
[-55.17749023 130.96145630]
[-41.56641769 138.53619385]
[-27.09688377 134.58238220]
[-12.75086975 130.20152283]
[1.45902586 125.39748383]
[15.66892147 120.59343719]
[29.87881660 115.78938293]
[44.08871078 110.98533630]
[58.29860687 106.18128967]
[72.50849915 101.37724304]
[74.33753204 90.04425049]
[80.62999725 80.44284821]
[90.29146576 74.24298859]
[101.64152527 72.52301788]
[112.70606995 75.58207703]
[122.99370575 64.66582489]
[126.82762909 49.31617737]
[141.18734741 45.36046982]
[151.47499084 34.44421768]
[155.30889893 19.09457397]
[169.66862488 15.13886642]
[179.95626831 4.22261429]
[190.24389648 -6.69363832]
[200.53153992 -17.60988998]
[210.81916809 -28.52614403]
[221.10679626 -39.44239426]
[231.39443970 -50.35865021]
[235.22836304 -65.70829773]
[249.58807373 -69.66400146]
[259.87570190 -80.58025360]
[270.16336060 -91.49650574]
[280.45098877 -102.41275787]
[290.73861694 -113.32901001]
[301.02624512 -124.24526215]
[304.86016846 -139.59490967]
[319.21990967 -143.55061340]
[329.50753784 -154.46687317]
[339.79516602 -165.38311768]
[350.08279419 -176.29937744]
[360.37045288 -187.21562195]
[370.65808105 -198.13188171]
[380.94570923 -209.04812622]
[384.77963257 -224.39778137]
[399.13934326 -228.35348511]
[409.42697144 -239.26972961]
[419.71463013 -250.18598938]
[430.00225830 -261.10223389]
[440.28988647 -272.01849365]
[450.57751465 -282.93475342]
[460.86517334 -293.85101318]
[471.15280151 -304.76724243]
[481.44042969 -315.68350220]
[491.72805786 -326.59976196]
[502.01568604 -337.51602173]
[512.30334473 -348.43225098]
[522.59094238 -359.34851074]
[532.87860107 -370.26477051]
[543.16625977 -381.18103027]
[553.45385742 -392.09725952]
[563.74151611 -403.01351929]
[574.02911377 -413.92977905]
[584.31677246 -424.84603882]
[594.60443115 -435.76226807]
[604.89202881 -446.67852783]
[615.17968750 -457.59478760]
[608.91699219 -471.44567871]
[608.43658447 -486.63903809]
[613.81164551 -500.85794067]
[624.22253418 -511.93411255]
[638.08166504 -518.17858887]
[653.27563477 -518.63897705]
[667.48742676 -513.24523926]
[678.54992676 -502.81982422]
[684.77612305 -488.95248413]
[685.21655273 -473.75793457]
[679.80413818 -459.55322266]
[669.36413574 -448.50445557]
[655.48864746 -442.29650879]
[640.29351807 -441.87603760]
[626.09594727 -447.30715942]
[615.80828857 -436.39089966]
[605.52069092 -425.47463989]
[595.23303223 -414.55841064]
[584.94537354 -403.64215088]
[574.65777588 -392.72589111]
[564.37011719 -381.80963135]
[554.08251953 -370.89337158]
[543.79486084 -359.97714233]
[533.50720215 -349.06088257]
[523.21960449 -338.14462280]
[512.93194580 -327.22836304]
[502.64431763 -316.31213379]
[492.35668945 -305.39587402]
[482.06906128 -294.47961426]
[471.78140259 -283.56335449]
[461.49377441 -272.64712524]
[451.20614624 -261.73086548]
[440.91851807 -250.81460571]
[430.63085938 -239.89836121]
[420.34323120 -228.98210144]
[410.05560303 -218.06584167]
[406.95751953 -203.49700928]
[391.86196899 -198.76049805]
[381.57431030 -187.84423828]
[371.28668213 -176.92799377]
[360.99905396 -166.01173401]
[350.71142578 -155.09548950]
[340.42379761 -144.17922974]
[330.13613892 -133.26298523]
[327.03808594 -118.69413757]
[311.94250488 -113.95762634]
[301.65487671 -103.04137421]
[291.36724854 -92.12512207]
[281.07958984 -81.20886993]
[270.79196167 -70.29261780]
[260.50433350 -59.37636566]
[257.40625000 -44.80752182]
[242.31068420 -40.07101440]
[232.02305603 -29.15476036]
[221.73541260 -18.23850822]
[211.44778442 -7.32225609]
[201.16015625 3.59399652]
[190.87251282 14.51024914]
[180.58488464 25.42650223]
[177.48680115 39.99534225]
[162.39123535 44.73185349]
[152.10360718 55.64810562]
[149.00552368 70.21694946]
[133.90995789 74.95346069]
[123.62232208 85.86971283]
[126.20384979 108.42836761]
[110.95516205 125.25200653]
[112.94977570 140.11878967]
[114.94439697 154.98559570]
[119.18685913 163.07415771]
[116.85672760 170.08726501]
[118.63082123 184.98197937]
[120.40492249 199.87670898]
[122.17901611 214.77142334]
[124.72291565 229.55413818]
[128.02975464 244.18508911]
[131.33660889 258.81604004]
[134.64346313 273.44699097]
[146.16360474 285.11825562]
[141.55575562 300.85671997]
[125.56007385 304.47204590]
[114.63155365 292.24502563]
[120.01250458 276.75384521]
[116.70565796 262.12289429]
[113.39881134 247.49192810]
[110.09196472 232.86097717]
[102.16364288 245.59446716]
] def
/pairs [
[6 198]
[7 197]
[8 196]
[9 195]
[10 193]
[11 192]
[12 191]
[15 69]
[16 68]
[17 67]
[18 66]
[19 65]
[20 64]
[21 63]
[26 62]
[27 61]
[30 58]
[31 57]
[32 56]
[33 55]
[34 54]
[36 52]
[37 51]
[38 50]
[39 49]
[40 48]
[74 189]
[75 188]
[77 186]
[78 185]
[80 183]
[81 182]
[82 181]
[83 180]
[84 179]
[85 178]
[86 177]
[88 175]
[89 174]
[90 173]
[91 172]
[92 171]
[93 170]
[95 168]
[96 167]
[97 166]
[98 165]
[99 164]
[100 163]
[101 162]
[103 160]
[104 159]
[105 158]
[106 157]
[107 156]
[108 155]
[109 154]
[110 153]
[111 152]
[112 151]
[113 150]
[114 149]
[115 148]
[116 147]
[117 146]
[118 145]
[119 144]
[120 143]
[121 142]
[122 141]
[123 140]
[124 139]
[199 210]
[200 209]
[201 208]
[202 207]
] def

init

% Start Annotations
89 109 5 GREEN omark 156 176 5 RED omark 89 cmark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.5
%%CreationDate: Mon Jan 22 15:50:03 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
CUCUGGUGUGCAAAUGGAGUUCUCUCGACUUCAUCGUACCGUCUUGAUGCUAUUUAGAUUUGGCAAACGGGAUUUGGCUUGAGGGAGUUGCUGCAUAGCUUGUAAGAAGCCAUCGAAACAUCUCUUCAUCUAAUGGUUGAAGAGGUGUUACAGAUGAUUUUCUUGCAAGUUAUGCAGCUGCUGCCGCAAGCUUUUUACUUC\
) def
/coor [
[105.26923370 171.13623047]
[94.97515869 160.22604370]
[89.46956635 146.27296448]
[89.54008484 131.27313232]
[95.17760468 117.37094879]
[85.51594543 128.84494019]
[75.85429382 140.31892395]
[66.19263458 151.79290771]
[56.53097916 163.26690674]
[46.86931992 174.74089050]
[45.95396042 179.89456177]
[43.40470886 183.78875732]
[39.97681808 186.01145935]
[36.47953415 186.51101685]
[26.29324341 197.52189636]
[16.10694885 208.53277588]
[5.92065668 219.54365540]
[-4.26563644 230.55453491]
[-14.45193005 241.56541443]
[-24.63822365 252.57627869]
[-34.82451630 263.58715820]
[-35.64019394 279.60946655]
[-48.75897217 288.84402466]
[-64.11724091 284.20690918]
[-69.93345642 269.25527954]
[-61.74591446 255.45875549]
[-45.83539200 253.40086365]
[-35.64910126 242.38999939]
[-25.46280670 231.37911987]
[-15.27651405 220.36824036]
[-5.09022141 209.35736084]
[5.09607172 198.34648132]
[15.28236485 187.33560181]
[25.46865845 176.32472229]
[35.39533234 165.07923889]
[45.05699158 153.60523987]
[54.71864700 142.13125610]
[64.38030243 130.65727234]
[74.04196167 119.18328094]
[83.70361328 107.70928955]
[78.78089905 93.54006958]
[64.08643341 90.52796173]
[49.39197159 87.51586151]
[34.69750977 84.50375366]
[20.00304794 81.49164581]
[5.30858660 78.47953796]
[-12.01866245 84.70246124]
[-24.68405151 72.55970001]
[-39.42358017 69.77648163]
[-54.16310883 66.99326324]
[-68.90264130 64.21004486]
[-83.64216614 61.42683029]
[-94.84098816 72.16768646]
[-110.21887970 74.24135590]
[-123.86272430 66.85047150]
[-130.52618408 52.83698273]
[-127.64702606 37.58935928]
[-116.33234406 26.97062302]
[-100.93286133 25.06389427]
[-87.37000275 32.60235214]
[-80.85894775 46.68730164]
[-66.11942291 49.47052002]
[-51.37989426 52.25373459]
[-36.64036560 55.03695297]
[-21.90083504 57.82016754]
[-11.73083782 51.26214981]
[0.57548964 53.46534348]
[8.32069302 63.78507614]
[23.01515579 66.79718018]
[37.70961761 69.80928802]
[52.40407944 72.82139587]
[67.09854126 75.83350372]
[81.79300690 78.84561157]
[92.69940948 78.93961334]
[100.72124481 83.34648895]
[104.50762177 89.91299438]
[117.33969879 82.14524841]
[130.17176819 74.37750244]
[143.00384521 66.60975647]
[155.83592224 58.84201431]
[168.66799927 51.07427216]
[176.46690369 37.30881500]
[191.36148071 37.33704376]
[204.19355774 29.56929970]
[211.99244690 15.80384350]
[226.88702393 15.83207226]
[239.71910095 8.06432724]
[252.55117798 0.29658329]
[260.35006714 -13.46887207]
[275.24465942 -13.44064331]
[288.07672119 -21.20838737]
[300.90881348 -28.97613335]
[313.74087524 -36.74387741]
[326.57296753 -44.51161957]
[339.40502930 -52.27936554]
[352.23709106 -60.04711151]
[365.06918335 -67.81485748]
[377.90124512 -75.58259583]
[390.73333740 -83.35034180]
[403.56539917 -91.11808777]
[416.39749146 -98.88583374]
[429.22955322 -106.65357971]
[442.06161499 -114.42131805]
[454.89370728 -122.18906403]
[467.72576904 -129.95680237]
[480.55786133 -137.72454834]
[493.38992310 -145.49229431]
[506.22201538 -153.26004028]
[519.05407715 -161.02778625]
[527.54736328 -177.36247253]
[545.09051514 -177.04986572]
[557.80023193 -185.01623535]
[570.50994873 -192.98258972]
[583.21966553 -200.94895935]
[586.81567383 -218.06524658]
[601.38928223 -227.11009216]
[617.66931152 -222.90405273]
[630.25360107 -231.06710815]
[642.83789062 -239.23017883]
[655.42218018 -247.39323425]
[668.00646973 -255.55630493]
[680.59075928 -263.71936035]
[693.17504883 -271.88241577]
[705.75933838 -280.04550171]
[718.34362793 -288.20855713]
[730.92791748 -296.37161255]
[743.51220703 -304.53466797]
[756.09649658 -312.69775391]
[768.61694336 -320.95840454]
[781.07275391 -329.31619263]
[787.80761719 -344.26858521]
[804.14910889 -345.64276123]
[813.28643799 -332.02511597]
[805.82000732 -317.42428589]
[789.43054199 -316.86038208]
[776.97473145 -308.50259399]
[773.16925049 -302.16058350]
[764.25958252 -300.11346436]
[751.67529297 -291.95037842]
[739.09100342 -283.78732300]
[726.50671387 -275.62426758]
[713.92236328 -267.46121216]
[701.33807373 -259.29812622]
[688.75378418 -251.13507080]
[676.16949463 -242.97201538]
[663.58520508 -234.80894470]
[651.00091553 -226.64588928]
[638.41662598 -218.48281860]
[625.83233643 -210.31976318]
[624.93518066 -197.46157837]
[616.67083740 -187.31788635]
[603.88446045 -183.73565674]
[591.18603516 -188.23924255]
[578.47631836 -180.27287292]
[565.76660156 -172.30650330]
[553.05688477 -164.34014893]
[550.04498291 -152.61987305]
[539.51525879 -145.88008118]
[526.82183838 -148.19570923]
[513.98974609 -140.42796326]
[501.15768433 -132.66021729]
[488.32559204 -124.89247894]
[475.49353027 -117.12473297]
[462.66143799 -109.35698700]
[449.82937622 -101.58924866]
[436.99728394 -93.82150269]
[424.16522217 -86.05375671]
[411.33316040 -78.28601074]
[398.50106812 -70.51826477]
[385.66900635 -62.75052261]
[372.83691406 -54.98278046]
[360.00485229 -47.21503448]
[347.17276001 -39.44729233]
[334.34069824 -31.67954636]
[321.50863647 -23.91180229]
[308.67654419 -16.14405823]
[295.84448242 -8.37631321]
[283.01239014 -0.60856885]
[276.13134766 12.60128498]
[260.31890869 13.12865829]
[247.48684692 20.89640236]
[234.65476990 28.66414642]
[227.77371216 41.87400055]
[211.96128845 42.40137482]
[199.12922668 50.16911697]
[192.24815369 63.37897110]
[176.43574524 63.90634537]
[163.60366821 71.67408752]
[150.77159119 79.44183350]
[137.93951416 87.20957947]
[125.10744476 94.97732544]
[112.27536774 102.74506378]
[126.88122559 99.32908630]
[141.71104431 101.58219910]
[154.64324951 109.18207550]
[163.82774353 121.04145813]
[167.95059204 135.46374512]
[166.42195129 150.38565063]
[159.46054077 163.67243958]
[148.06224060 173.42327881]
[133.85772705 178.24320984]
] def
/pairs [
[5 40]
[6 39]
[7 38]
[8 37]
[9 36]
[10 35]
[14 34]
[15 33]
[16 32]
[17 31]
[18 30]
[19 29]
[20 28]
[21 27]
[41 73]
[42 72]
[43 71]
[44 70]
[45 69]
[46 68]
[48 65]
[49 64]
[50 63]
[51 62]
[52 61]
[76 192]
[77 191]
[78 190]
[79 189]
[80 188]
[81 187]
[83 185]
[84 184]
[86 182]
[87 181]
[88 180]
[90 178]
[91 177]
[92 176]
[93 175]
[94 174]
[95 173]
[96 172]
[97 171]
[98 170]
[99 169]
[100 168]
[101 167]
[102 166]
[103 165]
[104 164]
[105 163]
[106 162]
[107 161]
[108 160]
[109 159]
[111 156]
[112 155]
[113 154]
[114 153]
[117 149]
[118 148]
[119 147]
[120 146]
[121 145]
[122 144]
[123 143]
[124 142]
[125 141]
[126 140]
[127 139]
[128 138]
[129 136]
[130 135]
] def

init

% Start Annotations
92 112 5 GREEN omark 158 178 5 RED omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

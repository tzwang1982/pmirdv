%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.5
%%CreationDate: Mon Jan 22 15:49:50 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
ACGCCCCUUAUUUAGAGUUAGCCUUCGUUUGGGACGGCUUUCUAAUUGCUUCUUAAAGUAGUUUUCUAGUACAAAAAUUUAUAAAAAACGGCUUUAAGAAGCAUAAAAAAAAGUCAUAUCAAACGAAGCCUUAAUUGGACUUGCGGCAUCACUGCUUUCUAUUUGGGUUUGUACCUAAAAUUGUGUCAGGAUGCAAAUUAUGGAAAGGAUG\
) def
/coor [
[159.17192078 183.62774658]
[155.40238953 168.94177246]
[158.39511108 154.01512146]
[146.47229004 144.91311646]
[134.54946899 135.81111145]
[119.73814392 134.23823547]
[113.46401215 119.71425629]
[99.36943817 123.86491394]
[85.51371002 118.97575378]
[77.14526367 106.89875031]
[77.43398285 92.20855713]
[65.51116943 83.10655975]
[53.58835220 74.00455475]
[41.66553497 64.90254974]
[29.74271774 55.80054855]
[16.86707878 60.71957397]
[3.34942961 58.65080261]
[-7.29580355 50.24027634]
[-12.35452175 37.76862717]
[-10.60454369 24.53350830]
[-22.39117622 15.25582886]
[-38.02062225 12.80003834]
[-43.23579025 -1.15171123]
[-55.02241898 -10.42938995]
[-66.80905151 -19.70706749]
[-78.59568024 -28.98474693]
[-90.38231659 -38.26242447]
[-102.16894531 -47.54010391]
[-113.95557404 -56.81778336]
[-125.74221039 -66.09545898]
[-137.52883911 -75.37313843]
[-149.31547546 -84.65081787]
[-164.17398071 -80.58501434]
[-178.41108704 -85.98485565]
[-186.64126587 -98.58359528]
[-185.88372803 -113.43499756]
[-197.67034912 -122.71266937]
[-209.45698547 -131.99035645]
[-221.24362183 -141.26803589]
[-233.03024292 -150.54571533]
[-244.81687927 -159.82337952]
[-259.37350464 -152.55358887]
[-275.58517456 -152.36050415]
[-290.20550537 -159.23204041]
[-300.32888794 -171.74652100]
[-303.96798706 -187.36643982]
[-300.44363403 -202.95300293]
[-312.36645508 -212.05499268]
[-324.28927612 -221.15699768]
[-336.21206665 -230.25900269]
[-348.13488770 -239.36100769]
[-360.05770874 -248.46301270]
[-371.98052979 -257.56500244]
[-383.90335083 -266.66702271]
[-395.82617188 -275.76901245]
[-407.74899292 -284.87103271]
[-419.67178345 -293.97302246]
[-431.59460449 -303.07501221]
[-443.51742554 -312.17703247]
[-459.18154907 -314.40093994]
[-464.60287476 -328.27389526]
[-476.52569580 -337.37588501]
[-488.44851685 -346.47787476]
[-500.37133789 -355.57989502]
[-512.29412842 -364.68188477]
[-527.95825195 -366.90582275]
[-533.37963867 -380.77874756]
[-545.30242920 -389.88073730]
[-558.64758301 -382.54409790]
[-573.82360840 -381.27618408]
[-588.20123291 -386.29663086]
[-599.28930664 -396.73568726]
[-605.16687012 -410.78466797]
[-604.81555176 -426.00955200]
[-598.29626465 -439.77249146]
[-586.73846436 -449.68896484]
[-572.14459229 -454.04095459]
[-557.04321289 -452.07437134]
[-544.05065918 -444.12997437]
[-535.41796875 -431.58419800]
[-532.64086914 -416.61062622]
[-536.20043945 -401.80355835]
[-524.27758789 -392.70156860]
[-509.46627808 -391.12869263]
[-503.19213867 -376.60470581]
[-491.26934814 -367.50271606]
[-479.34652710 -358.40069580]
[-467.42370605 -349.29870605]
[-455.50088501 -340.19668579]
[-440.68957520 -338.62380981]
[-434.41543579 -324.09985352]
[-422.49261475 -314.99783325]
[-410.56979370 -305.89584351]
[-398.64697266 -296.79382324]
[-386.72415161 -287.69183350]
[-374.80133057 -278.58984375]
[-362.87854004 -269.48782349]
[-350.95571899 -260.38583374]
[-339.03289795 -251.28382874]
[-327.11007690 -242.18182373]
[-315.18725586 -233.07981873]
[-303.26443481 -223.97781372]
[-291.34161377 -214.87580872]
[-279.29681396 -221.75909424]
[-265.49472046 -223.53747559]
[-252.01481628 -219.90971375]
[-240.90078735 -211.39163208]
[-233.85063171 -199.24299622]
[-231.95724487 -185.28132629]
[-235.53919983 -171.61001587]
[-223.75256348 -162.33233643]
[-211.96594238 -153.05465698]
[-200.17930603 -143.77697754]
[-188.39266968 -134.49929810]
[-176.60604858 -125.22162628]
[-162.34808350 -129.44636536]
[-148.16867065 -124.40570831]
[-139.57579041 -111.83526611]
[-140.03779602 -96.43744659]
[-128.25115967 -87.15977478]
[-116.46453094 -77.88209534]
[-104.67790222 -68.60441589]
[-92.89126587 -59.32673645]
[-81.10463715 -50.04905701]
[-69.31800842 -40.77137756]
[-57.53137207 -31.49370003]
[-45.74474335 -22.21602058]
[-33.95811081 -12.93834305]
[-19.17172050 -11.14615345]
[-13.11349678 3.46919751]
[-1.32686543 12.74687576]
[14.31845474 7.77566147]
[30.00101662 13.16368866]
[39.47559357 26.97476196]
[38.84471893 43.87773132]
[50.76753616 52.97973633]
[62.69035339 62.08173752]
[74.61316681 71.18373871]
[86.53598785 80.28574371]
[100.63056183 76.13508606]
[114.48628998 81.02424622]
[122.85473633 93.10124969]
[122.56601715 107.79144287]
[138.23013306 110.01535797]
[143.65147400 123.88829803]
[155.57429504 132.99029541]
[167.49710083 142.09230042]
[181.10704041 135.27095032]
[196.26725769 135.03614807]
[209.96995544 141.38090515]
[219.51982117 152.99818420]
[223.06404114 167.54974365]
[219.95170593 182.13668823]
[235.61582947 184.36061096]
[241.03715515 198.23355103]
[252.95997620 207.33554077]
[264.88278198 216.43754578]
[276.80560303 225.53955078]
[288.72842407 234.64155579]
[300.65124512 243.74356079]
[312.57406616 252.84556580]
[324.49688721 261.94757080]
[329.67245483 262.61422729]
[333.67489624 264.96414185]
[336.05957031 268.26873779]
[336.73532104 271.72860718]
[348.24185181 281.35150146]
[359.74838257 290.97436523]
[371.25491333 300.59725952]
[382.76144409 310.22012329]
[394.26794434 319.84301758]
[405.77447510 329.46588135]
[417.28100586 339.08877563]
[428.85852051 348.62612915]
[440.50637817 358.07745361]
[452.15423584 367.52877808]
[466.19137573 361.42819214]
[481.45489502 362.56137085]
[494.43731689 370.66787720]
[502.15536499 383.88491821]
[502.83551025 399.17529297]
[496.32147217 413.02542114]
[484.11010742 422.25262451]
[469.00750732 424.73654175]
[454.48413086 419.90640259]
[443.87734985 408.87216187]
[439.62451172 394.16937256]
[442.70291138 379.17663574]
[431.05505371 369.72531128]
[419.40719604 360.27398682]
[412.23306274 358.50057983]
[407.65814209 350.59530640]
[396.15161133 340.97241211]
[384.64508057 331.34954834]
[373.13854980 321.72665405]
[361.63201904 312.10379028]
[350.12548828 302.48089600]
[338.61895752 292.85800171]
[327.11242676 283.23513794]
[315.39486694 273.87039185]
[303.47204590 264.76837158]
[291.54925537 255.66636658]
[279.62643433 246.56437683]
[267.70361328 237.46237183]
[255.78079224 228.36036682]
[243.85797119 219.25836182]
[231.93516541 210.15635681]
[217.12384033 208.58348083]
[210.84970093 194.05950928]
[197.59899902 200.90670776]
[182.62782288 201.32342529]
] def
/pairs [
[3 147]
[4 146]
[5 145]
[7 143]
[11 139]
[12 138]
[13 137]
[14 136]
[15 135]
[20 131]
[21 130]
[23 128]
[24 127]
[25 126]
[26 125]
[27 124]
[28 123]
[29 122]
[30 121]
[31 120]
[32 119]
[36 115]
[37 114]
[38 113]
[39 112]
[40 111]
[41 110]
[47 103]
[48 102]
[49 101]
[50 100]
[51 99]
[52 98]
[53 97]
[54 96]
[55 95]
[56 94]
[57 93]
[58 92]
[59 91]
[61 89]
[62 88]
[63 87]
[64 86]
[65 85]
[67 83]
[68 82]
[153 209]
[155 207]
[156 206]
[157 205]
[158 204]
[159 203]
[160 202]
[161 201]
[162 200]
[166 199]
[167 198]
[168 197]
[169 196]
[170 195]
[171 194]
[172 193]
[173 192]
[174 190]
[175 189]
[176 188]
] def

init

% Start Annotations
23 43 5 GREEN omark 110 130 5 RED omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

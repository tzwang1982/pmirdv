%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.5
%%CreationDate: Mon Jan 22 15:49:51 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
GCCGAUAGCAUAUGGACUCCAAUAAGGUCAAGAUCUGUGGACUUUUUUUUCUAUCUUUUGUACACAGUGUACAAAAAAGAGAAAGUCCACAUAUCUUGACCUGAUUAGAAUCCGGACGAAAGAUACGUCUUGACUCUGCACUGAAUAAUUUCUUCUUCUGCACUGAAUAAUUUCUC\
) def
/coor [
[46.36291885 142.07067871]
[43.71451187 156.83502197]
[51.66036606 170.77212524]
[45.58445740 185.62011719]
[30.14770317 189.98889160]
[17.19185829 180.52708435]
[16.65554047 164.49299622]
[28.95016479 154.18661499]
[31.59857368 139.42225647]
[31.86241722 108.66946411]
[43.68721008 84.43140411]
[62.12934494 70.24182129]
[81.54674530 66.89351654]
[96.90480804 72.53347015]
[85.27279663 63.06266403]
[73.64077759 53.59185791]
[58.05395889 50.87863159]
[53.06960297 36.84276962]
[41.43758774 27.37195969]
[25.85076523 24.65873528]
[20.86640930 10.62287140]
[9.23439312 1.15206337]
[-2.39762235 -8.31874466]
[-17.98444366 -11.03197002]
[-22.96879959 -25.06783295]
[-34.60081482 -34.53864288]
[-46.23283005 -44.00944901]
[-57.86484528 -53.48025894]
[-69.49686432 -62.95106506]
[-81.12887573 -72.42187500]
[-92.76089478 -81.89268494]
[-104.39291382 -91.36348724]
[-116.02492523 -100.83429718]
[-127.65694427 -110.30510712]
[-143.24375916 -113.01833344]
[-148.22811890 -127.05419159]
[-159.86013794 -136.52500916]
[-171.49215698 -145.99580383]
[-183.12416077 -155.46661377]
[-194.75617981 -164.93742371]
[-206.38819885 -174.40823364]
[-218.02021790 -183.87904358]
[-229.65223694 -193.34985352]
[-241.28424072 -202.82066345]
[-252.91625977 -212.29147339]
[-264.54827881 -221.76228333]
[-276.18029785 -231.23307800]
[-287.81231689 -240.70388794]
[-299.44433594 -250.17469788]
[-311.07635498 -259.64550781]
[-312.34786987 -244.69949341]
[-324.72384644 -236.22395325]
[-339.11889648 -240.44091797]
[-344.96533203 -254.25463867]
[-337.97122192 -267.52423096]
[-323.27047729 -270.50814819]
[-334.01730347 -280.97259521]
[-344.76416016 -291.43707275]
[-355.51101685 -301.90155029]
[-366.25787354 -312.36602783]
[-377.00473022 -322.83050537]
[-387.75158691 -333.29498291]
[-398.49841309 -343.75942993]
[-409.24526978 -354.22390747]
[-424.81143188 -360.94186401]
[-422.66519165 -377.75939941]
[-405.91073608 -380.35260010]
[-398.78079224 -364.97076416]
[-388.03393555 -354.50628662]
[-377.28710938 -344.04180908]
[-366.54025269 -333.57736206]
[-355.79339600 -323.11288452]
[-345.04653931 -312.64840698]
[-334.29968262 -302.18392944]
[-323.55285645 -291.71945190]
[-312.80599976 -281.25497437]
[-301.60552979 -271.27752686]
[-289.97351074 -261.80670166]
[-278.34149170 -252.33590698]
[-266.70947266 -242.86509705]
[-255.07746887 -233.39428711]
[-243.44544983 -223.92347717]
[-231.81344604 -214.45268250]
[-220.18142700 -204.98187256]
[-208.54940796 -195.51106262]
[-196.91738892 -186.04025269]
[-185.28536987 -176.56944275]
[-173.65336609 -167.09863281]
[-162.02134705 -157.62782288]
[-150.38932800 -148.15701294]
[-138.75730896 -138.68621826]
[-124.00248718 -136.65040588]
[-118.18613434 -121.93711853]
[-106.55411530 -112.46631622]
[-94.92210388 -102.99550629]
[-83.29008484 -93.52469635]
[-71.65807343 -84.05388641]
[-60.02605438 -74.58308411]
[-48.39403915 -65.11227417]
[-36.76202393 -55.64146423]
[-25.13000679 -46.17065811]
[-13.49799156 -36.69984818]
[1.25682974 -34.66403961]
[7.07318544 -19.95075989]
[18.70520210 -10.47995281]
[30.33721733 -1.00914443]
[45.09203720 1.02666557]
[50.90839386 15.73994446]
[62.54040909 25.21075249]
[77.29523468 27.24656296]
[83.11158752 41.95984268]
[94.74360657 51.43064880]
[106.37561798 60.90145874]
[121.20523834 63.15589523]
[135.12625122 57.56972504]
[149.04727173 51.98355484]
[162.96829224 46.39738464]
[176.88929749 40.81121445]
[181.58448792 25.89514351]
[194.79681396 17.53041458]
[210.28779602 19.66659546]
[220.74308777 31.29504967]
[221.22601318 46.92517471]
[211.50854492 59.17690277]
[196.17898560 62.26534653]
[182.47547913 54.73223114]
[168.55445862 60.31840134]
[154.63343811 65.90457153]
[140.71241760 71.49073792]
[126.79140472 77.07691193]
[125.99420166 84.53442383]
[140.90922546 86.12882233]
[155.82421875 87.72347260]
[154.22932434 102.63844299]
[139.31481934 101.04384613]
[124.39980316 99.44944763]
[123.60260010 106.90695190]
[136.02822876 115.30955505]
[148.45385742 123.71215820]
[160.87948608 132.11476135]
[177.97535706 128.47773743]
[192.14230347 138.12733459]
[194.90660095 154.70213318]
[207.47940063 162.88288879]
[220.05221558 171.06362915]
[234.95680237 166.33215332]
[249.39596558 172.33587646]
[256.55194092 186.24005127]
[253.04591370 201.47953796]
[240.53332520 210.85870361]
[224.92222595 209.94902039]
[213.58369446 199.17999268]
[211.87145996 183.63642883]
[199.29866028 175.45568848]
[186.72586060 167.27493286]
[174.59855652 171.68240356]
[161.96099854 168.23947144]
[153.49694824 157.98948669]
[152.47688293 144.54039001]
[140.05125427 136.13778687]
[127.62562561 127.73518372]
[115.19999695 119.33258820]
[109.10122681 123.69778442]
[96.90367889 132.42819214]
[90.80490875 136.79338074]
[94.75144958 151.26490784]
[98.69798279 165.73641968]
[110.71983337 176.89021301]
[106.80799103 192.81596375]
[90.98661804 197.13063049]
[79.53139496 185.39564514]
[84.22647095 169.68296814]
[80.27993011 155.21144104]
[76.33338928 140.73992920]
[68.84077454 141.07261658]
[61.92465973 154.38304138]
] def
/pairs [
[1 9]
[2 8]
[14 113]
[15 112]
[16 111]
[18 109]
[19 108]
[21 106]
[22 105]
[23 104]
[25 102]
[26 101]
[27 100]
[28 99]
[29 98]
[30 97]
[31 96]
[32 95]
[33 94]
[34 93]
[36 91]
[37 90]
[38 89]
[39 88]
[40 87]
[41 86]
[42 85]
[43 84]
[44 83]
[45 82]
[46 81]
[47 80]
[48 79]
[49 78]
[50 77]
[56 76]
[57 75]
[58 74]
[59 73]
[60 72]
[61 71]
[62 70]
[63 69]
[64 68]
[114 130]
[115 129]
[116 128]
[117 127]
[118 126]
[137 162]
[138 161]
[139 160]
[140 159]
[143 155]
[144 154]
[145 153]
[165 174]
[166 173]
[167 172]
] def

init

% Start Annotations
23 43 5 GREEN omark 86 106 5 RED omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF

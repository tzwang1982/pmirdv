%!PS-Adobe-3.0 EPSF-3.0
%%Creator: ViennaRNA-2.3.5
%%CreationDate: Mon Jan 22 15:49:50 2018
%%Title: RNA Secondary Structure Plot
%%BoundingBox: 0 0 700 700
%%DocumentFonts: Helvetica
%%Pages: 1
%%EndComments

%Options: 
% to switch off outline pairs of sequence comment or
% delete the appropriate line near the end of the file

%%BeginProlog
/RNAplot 100 dict def
RNAplot begin
/fsize  14 def
/outlinecolor {0.2 setgray} bind def
/paircolor    {0.2 setgray} bind def
/seqcolor     {0   setgray} bind def
/cshow  { dup stringwidth pop -2 div fsize -3 div rmoveto show} bind def
/min { 2 copy gt { exch } if pop } bind def
/max { 2 copy lt { exch } if pop } bind def
/arccoords { % i j arccoords
  % puts optimal x1 y1 x2 y2 coordinates used in bezier curves from i to j
  % onto the stack
  dup 3 -1 roll dup 4 -1 roll lt dup dup 5 2 roll {exch} if
  dup 3 -1 roll dup 3 -1 roll exch sub 1 sub dup
  4 -2 roll 5 -1 roll {exch} if 4 2 roll
  sequence length dup 2 div exch 3 1 roll lt 
  {exch 5 -1 roll pop 4 -2 roll exch 4 2 roll}
  { 4 2 roll 5 -1 roll dup 6 1 roll {exch} if
    4 -2 roll exch pop dup 3 -1 roll dup 4 1 roll
    exch add 4 -1 roll dup 5 1 roll sub 1 sub
    5 -1 roll not {4 -2 roll exch 4 2 roll} if
  }ifelse
   % compute the scalingfactor and prepare (1-sf) and sf*r
  2 mul exch cpr 3 1 roll div dup
  3 -1 roll mul exch 1 exch sub exch
   % compute the coordinates
  3 -1 roll 1 sub coor exch get aload pop % get coord for i
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate y1
  4 -1 roll dup 5 1 roll mul 3 -1 roll dup 4 1 roll add exch % calculate x1
  5 -1 roll 1 sub coor exch get aload pop % get coord for j
  % duplicate j coord
  dup 3 -1 roll dup 4 1 roll exch 8 2 roll
  6 -1 roll dup 7 1 roll mul 5 -1 roll dup 6 1 roll add exch % calculate y2
  6 -1 roll mul 5 -1 roll add exch % calculate x2
  6 -2 roll % reorder
} bind def
/drawoutline {
  gsave outlinecolor newpath
  coor 0 get aload pop 0.8 0 360 arc % draw 5' circle of 1st sequence
  currentdict /cutpoint known        % check if cutpoint is defined
  {coor 0 cutpoint getinterval
   {aload pop lineto} forall         % draw outline of 1st sequence
   coor cutpoint 1 add get aload pop
   2 copy moveto 0.8 0 360 arc       % draw 5' circle of 2nd sequence
   coor cutpoint 1 add coor length cutpoint 1 add sub getinterval
   {aload pop lineto} forall}        % draw outline of 2nd sequence
  {coor {aload pop lineto} forall}   % draw outline as a whole
  ifelse
  stroke grestore
} bind def
/drawpairs {
  paircolor
  0.7 setlinewidth
  [9 3.01] 9 setdash
  newpath
  pairs {aload pop
      currentdict (cpr) known
      { exch dup
        coor  exch 1 sub get aload pop moveto
        exch arccoords curveto
      }
      { coor exch 1 sub get aload pop moveto
        coor exch 1 sub get aload pop lineto
      }ifelse
  } forall
  stroke
} bind def
% draw bases
/drawbases {
  [] 0 setdash
  seqcolor
  0
  coor {
    aload pop moveto
    dup sequence exch 1 getinterval cshow
    1 add
  } forall
  pop
} bind def

/init {
  /Helvetica findfont fsize scalefont setfont
  1 setlinejoin
  1 setlinecap
  0.8 setlinewidth
  % find the coordinate range
  /xmax -1000 def /xmin 10000 def
  /ymax -1000 def /ymin 10000 def
  coor {
      aload pop
      dup ymin lt {dup /ymin exch def} if
      dup ymax gt {/ymax exch def} {pop} ifelse
      dup xmin lt {dup /xmin exch def} if
      dup xmax gt {/xmax exch def} {pop} ifelse
  } forall
  /size {xmax xmin sub ymax ymin sub max} bind def
  /width {xmax xmin sub} bind def
  /height {ymax ymin sub} bind def
  10 10 translate
  680 size 10 add div dup scale
  size width sub width xmin sub xmax sub add 2 div 5 add
  size height sub height ymin sub ymax sub add 2 div 5 add
  translate
} bind def
end
RNAplot begin
% extra definitions for standard anotations
/min { 2 copy gt { exch } if pop } bind def
/BLACK { 0 0 0 } def
/RED   { 1 0 0 } def
/GREEN { 0 1 0 } def
/BLUE  { 0 0 1 } def
/WHITE { 1 1 1 } def
/LabelFont { % font size LabelFont
  exch findfont exch fsize mul scalefont setfont
} bind def
/Label { % i dx dy (text) Label
  % write text at base i plus offset dx, dy
  4 3 roll 1 sub coor exch get aload pop moveto
  3 1 roll fsize mul exch fsize mul exch rmoveto
  show
} bind def
/cmark { % i cmark   draw circle around base i
  newpath 1 sub coor exch get aload pop
  fsize 2 div 0 360 arc stroke
} bind def
/gmark { % i j c gmark
  % draw basepair i,j with c counter examples in gray
  gsave
  3 min [0 0.33 0.66 0.9] exch get setgray
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  1 sub dup coor exch get aload pop moveto
  sequence exch 1 getinterval cshow
  grestore
} bind def
/segmark { % f i j lw r g b segmark
  % mark segment [i,j] with outline width lw and color rgb
  % use omark and Fomark instead
  gsave
  setrgbcolor setlinewidth
  newpath
  1 sub exch 1 sub dup
  coor exch get aload pop moveto
  currentdict (cpr) known
  {
    3 -1 roll dup 4 1 roll dup
    {
      3 1 roll dup 3 -1 roll dup
      4 1 roll exch 5 2 roll exch
    }
    {
      3 1 roll exch
    } ifelse
    1 exch { coor exch get aload pop lineto } for
    {
      dup 3 1 roll 1 add exch 1 add arccoords pop pop
      4 2 roll 5 -1 roll coor exch get aload pop curveto
    } if
  }
  {
    exch 1 exch {
      coor exch get aload pop lineto
    } for
  } ifelse
  { closepath fill } if  stroke
  grestore
} bind def
/omark { % i j lw r g b omark
  % stroke segment [i..j] with linewidth lw, color rgb
  false 7 1 roll segmark
} bind def
/Fomark { % i j r g b Fomark
  % fill segment [i..j] with color rgb
  % should precede drawbases
  1 4 1 roll true 7 1 roll segmark
} bind def
/BFmark{ % i j k l r g b BFmark
  % fill block between pairs (i,j) and (k,l) with color rgb
  % should precede drawbases
  gsave
  setrgbcolor
  newpath
  currentdict (cpr) known
  {
    dup 1 sub coor exch get aload pop moveto % move to l
    dup 1 sub 4 -1 roll dup 5 1 roll 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from l to j
    3 -1 roll 4 -1 roll dup 5 1 roll arccoords curveto % curve from j to i
    exch dup 4 -1 roll 1 sub exch 1 sub 1 exch
    { coor exch get aload pop lineto } for % lines from i to k
    exch arccoords curveto% curve from k to l
  }
  {  exch 4 3 roll exch 1 sub exch 1 sub dup
     coor exch get aload pop moveto
     exch 1 exch { coor exch get aload pop lineto } for
     exch 1 sub exch 1 sub dup
     coor exch get aload pop lineto
     exch 1 exch { coor exch get aload pop lineto } for
  } ifelse
    closepath fill stroke
   grestore
} bind def
/hsb {
  dup 0.3 mul 1 exch sub sethsbcolor
} bind def
/colorpair { % i j hue sat colorpair
  % draw basepair i,j in color
  % 1 index 0.00 ne {
  gsave
  newpath
  hsb
  fsize setlinewidth
  currentdict (cpr) known
  {
    exch dup
    coor  exch 1 sub get aload pop moveto
    exch arccoords curveto
  }
  { 1 sub coor exch get aload pop moveto
    1 sub coor exch get aload pop lineto
  } ifelse
   stroke
   grestore
   % } if
} bind def
end

%%EndProlog
RNAplot begin
% data start here
/sequence (\
AAUAUUUUGCUUGGGCUUUUUGCAUUGACAACGAGAGAGAGCACGCUGGCUGGUCGGCGGCCAUGAACGCGGUCGUGACCGUUUAUUUGCUCGCUCCCUCUUGCUGUCAUCCACUUCGCCCUGUAAAAUGGCUGCCAGGAAAUUUCGGAGCCGUGGCUCUCUUACCAGGAGAUUUCUACUGUAUGAAAGAAGAUCAAAAACAACCUUGCUCUGGAGAAGCAAAUUGUUUUUCGACAAUCAACAGGUUUCA\
) def
/coor [
[57.06122971 125.02664185]
[52.41345596 114.33845520]
[50.38265228 102.86174011]
[35.44869614 101.45572662]
[20.51473618 100.04970551]
[5.58077812 98.64369202]
[-9.35317993 97.23767090]
[-24.28713799 95.83165741]
[-39.22109604 94.42563629]
[-54.15505600 93.01962280]
[-64.55392456 100.62153625]
[-76.94868469 99.15902710]
[-84.77306366 89.95507050]
[-99.68825531 88.36225128]
[-114.60344696 86.76943207]
[-129.51863098 85.17661285]
[-135.14393616 98.41571808]
[-144.25990295 109.52246094]
[-156.12167358 117.60343170]
[-169.76399231 122.01187897]
[-184.07975769 122.39946747]
[-197.90988159 118.74377441]
[-210.13708496 111.34939575]
[-219.77621460 100.82256317]
[-226.05358887 88.02147675]
[-228.46911621 73.98633575]
[-243.36320496 72.20696259]
[-258.25729370 70.42758942]
[-273.15136719 68.64821625]
[-288.04547119 66.86884308]
[-302.66604614 72.91446686]
[-314.38558960 63.72202682]
[-329.27969360 61.94265366]
[-344.17376709 60.16327667]
[-359.06787109 58.38390350]
[-373.96194458 56.60453033]
[-388.85604858 54.82515717]
[-403.47659302 60.87078094]
[-415.19616699 51.67834091]
[-430.09027100 49.89896774]
[-444.98434448 48.11959457]
[-459.87844849 46.34022141]
[-472.22531128 55.83718109]
[-487.30468750 53.82047272]
[-496.28250122 41.99108124]
[-511.17657471 40.21170807]
[-526.10144043 38.71226120]
[-541.05181885 37.49326706]
[-556.00225830 36.27427292]
[-570.38555908 42.86449432]
[-582.44195557 34.11848450]
[-597.39233398 32.89949036]
[-612.34271240 31.68049812]
[-627.29309082 30.46150398]
[-642.24346924 29.24250984]
[-657.19384766 28.02351570]
[-665.97515869 30.44076920]
[-672.32336426 26.69455719]
[-687.25732422 25.28853989]
[-702.19128418 23.88252258]
[-717.12524414 22.47650528]
[-732.05920410 21.07048798]
[-742.21502686 32.80244827]
[-757.33471680 36.29156876]
[-771.60449219 30.19620514]
[-779.53729248 16.86015320]
[-778.08282471 1.41139579]
[-767.80029297 -10.20970440]
[-752.64361572 -13.53459740]
[-738.44085693 -7.28479385]
[-730.65319824 6.13652897]
[-715.71923828 7.54254627]
[-700.78527832 8.94856358]
[-685.85131836 10.35458088]
[-670.91735840 11.76059818]
[-655.97485352 13.07312965]
[-641.02447510 14.29212379]
[-626.07409668 15.51111794]
[-611.12371826 16.73011208]
[-596.17333984 17.94910622]
[-581.22296143 19.16810036]
[-567.90899658 12.49068928]
[-554.78326416 21.32388687]
[-539.83282471 22.54288101]
[-524.88244629 23.76187325]
[-521.98669434 21.79324532]
[-518.00091553 21.11513329]
[-513.53552246 22.22140503]
[-509.39721680 25.31762123]
[-494.50314331 27.09699440]
[-482.99127197 17.71547318]
[-467.86120605 19.30783844]
[-458.09906006 31.44613266]
[-443.20498657 33.22550583]
[-428.31088257 35.00487900]
[-413.41680908 36.78425598]
[-399.86157227 30.61135674]
[-387.07666016 39.93106842]
[-372.18258667 41.71044540]
[-357.28848267 43.48981857]
[-342.39440918 45.26919174]
[-327.50030518 47.04856491]
[-312.60623169 48.82793808]
[-299.05099487 42.65504074]
[-286.26608276 51.97475433]
[-271.37200928 53.75412750]
[-256.47790527 55.53350067]
[-241.58383179 57.31287384]
[-226.68974304 59.09225082]
[-220.25978088 44.79703903]
[-209.71090698 33.17685318]
[-196.06852722 25.37915039]
[-180.66435242 22.17894745]
[-165.00631714 23.90181160]
[-150.63101196 30.39076996]
[-138.95292664 41.02053833]
[-131.12521362 54.75775528]
[-127.92581177 70.26142120]
[-113.01062012 71.85424042]
[-98.09543610 73.44705963]
[-83.18024445 75.03987885]
[-67.52770233 67.08054352]
[-52.74903870 78.08566284]
[-37.81507874 79.49168396]
[-22.88112068 80.89769745]
[-7.94716311 82.30371857]
[6.98679543 83.70973206]
[21.92075348 85.11575317]
[36.85471344 86.52176666]
[51.78866959 87.92778778]
[56.20053864 76.51217651]
[63.26832962 66.52082825]
[72.56346130 58.55959702]
[83.52230072 53.11123657]
[95.48031616 50.50613022]
[107.71239471 50.90224457]
[119.47681427 54.27555847]
[130.06018066 60.42152405]
[140.83143616 49.98215866]
[151.60267639 39.54279327]
[162.37391663 29.10342598]
[173.14515686 18.66406059]
[183.91639709 8.22469425]
[194.68763733 -2.21467185]
[205.45887756 -12.65403748]
[216.23011780 -23.09340477]
[226.46543884 -34.05872726]
[236.13917542 -45.52253342]
[245.81291199 -56.98633957]
[255.48664856 -68.45014191]
[265.16036987 -79.91394806]
[267.51879883 -96.14262390]
[282.85055542 -101.96234131]
[295.38366699 -91.38626862]
[292.22512817 -75.29416656]
[276.62417603 -70.24021149]
[266.95043945 -58.77640533]
[257.27670288 -47.31259918]
[247.60296631 -35.84879684]
[237.92922974 -24.38499260]
[252.72393799 -26.85820007]
[266.18988037 -20.24999809]
[273.28555298 -7.03442669]
[271.35443115 7.84074497]
[261.11947632 18.80641174]
[246.41258240 21.75714302]
[232.73982239 15.58821964]
[225.22013855 2.60921788]
[226.66947937 -12.32216263]
[215.89823914 -1.88279676]
[205.12699890 8.55656910]
[194.35575867 18.99593544]
[183.58451843 29.43530083]
[172.81327820 39.87466812]
[162.04203796 50.31403351]
[151.27079773 60.75339890]
[140.49955750 71.19276428]
[149.48098755 95.34141541]
[145.16456604 120.74204254]
[157.69497681 128.98757935]
[170.22538757 137.23312378]
[182.75578308 145.47865295]
[191.61961365 147.57307434]
[195.39053345 153.90663147]
[207.81675720 162.30836487]
[220.24298096 170.71008301]
[235.56802368 167.92070007]
[248.05029297 176.61825562]
[250.61511230 191.24554443]
[265.94015503 188.45616150]
[278.42242432 197.15371704]
[280.98724365 211.78100586]
[293.41345215 220.18272400]
[298.56878662 220.54986572]
[302.66912842 222.63565063]
[305.23907471 225.75679016]
[306.14031982 229.14041138]
[318.24237061 238.00270081]
[330.34445190 246.86497498]
[342.44650269 255.72726440]
[354.54858398 264.58953857]
[366.65063477 273.45181274]
[378.75271606 282.31411743]
[391.57818604 281.11724854]
[401.47106934 288.72647095]
[403.47143555 300.63998413]
[415.46163940 309.65304565]
[427.45184326 318.66610718]
[439.44201660 327.67916870]
[451.43222046 336.69223022]
[466.62292480 332.98049927]
[480.62255859 339.94787598]
[486.82092285 354.30456543]
[482.29135132 369.27175903]
[469.17254639 377.78240967]
[453.65884399 375.81808472]
[443.07531738 364.30621338]
[442.41915894 348.68240356]
[430.42895508 339.66934204]
[418.43878174 330.65628052]
[406.44857788 321.64324951]
[394.45837402 312.63018799]
[376.93872070 311.44094849]
[369.89041138 294.41616821]
[357.78836060 285.55389404]
[345.68627930 276.69161987]
[333.58422852 267.82931519]
[321.48217773 258.96704102]
[309.38009644 250.10475159]
[297.27804565 241.24247742]
[285.01171875 232.60894775]
[272.58551025 224.20722961]
[258.05566406 227.27633667]
[245.33403015 218.93280029]
[242.21337891 203.67176819]
[227.68354797 206.74087524]
[214.96189880 198.39735413]
[211.84126282 183.13630676]
[199.41503906 174.73458862]
[186.98881531 166.33285522]
[174.51025391 158.00906372]
[161.97984314 149.76353455]
[149.44943237 141.51799011]
[136.91903687 133.27244568]
[128.15502930 140.95564270]
[117.84268188 146.38652039]
[106.54908752 149.26641846]
[94.89533234 149.43696594]
[83.52230072 146.88876343]
[73.05545044 141.76196289]
] def
/pairs [
[3 130]
[4 129]
[5 128]
[6 127]
[7 126]
[8 125]
[9 124]
[10 123]
[13 121]
[14 120]
[15 119]
[16 118]
[26 109]
[27 108]
[28 107]
[29 106]
[30 105]
[32 103]
[33 102]
[34 101]
[35 100]
[36 99]
[37 98]
[39 96]
[40 95]
[41 94]
[42 93]
[45 90]
[46 89]
[47 85]
[48 84]
[49 83]
[51 81]
[52 80]
[53 79]
[54 78]
[55 77]
[56 76]
[58 75]
[59 74]
[60 73]
[61 72]
[62 71]
[138 177]
[139 176]
[140 175]
[141 174]
[142 173]
[143 172]
[144 171]
[145 170]
[146 169]
[147 160]
[148 159]
[149 158]
[150 157]
[151 156]
[179 244]
[180 243]
[181 242]
[182 241]
[184 240]
[185 239]
[186 238]
[189 235]
[192 232]
[193 231]
[197 230]
[198 229]
[199 228]
[200 227]
[201 226]
[202 225]
[203 224]
[206 222]
[207 221]
[208 220]
[209 219]
[210 218]
] def

init

% Start Annotations
26 46 5 GREEN omark 91 111 5 RED omark
% End Annotations
% switch off outline pairs or bases by removing these lines
drawoutline
drawpairs
drawbases
% show it
showpage
end
%%EOF
